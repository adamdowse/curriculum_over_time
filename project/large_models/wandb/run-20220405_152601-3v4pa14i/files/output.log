
INIT: Using found mnist data
INIT: Finished creating train dataset
   label  score
i
0      2    NaN
1      0    NaN
2      4    NaN
3      8    NaN
6      0    NaN
original [5514, 6314, 5599, 5707, 5431, 5058, 5516, 5840, 5484, 5531]
original 55994
original [1389, 1563, 1391, 1434, 1393, 1255, 1360, 1453, 1341, 1427]
original 14006
MAIN: Started Training
Batch =0
2022-04-05 15:26:06.357776: E tensorflow/stream_executor/cuda/cuda_driver.cc:271] failed call to cuInit: UNKNOWN ERROR (34)
2022-04-05 15:26:06.357866: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (69dc0e526fe3): /proc/driver/nvidia/version does not exist
2022-04-05 15:26:06.358122: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
Batch =100
Batch =200
Traceback (most recent call last):
  File "RunTest.py", line 193, in <module>
    main(args)
  File "RunTest.py", line 134, in main
    col = sf.update_col(batch_loss,col,X[0],info) # = (i,current_epoch)
  File "/com.docker.devenvironments.code/project/large_models/supporting_functions.py", line 195, in update_col
    new_row = pd.DataFrame(data={'i':indexes[i],str(info.current_epoch):batch_loss[i].numpy()},index=[0])
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/util/traceback_utils.py", line 150, in error_handler
    return fn(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/util/dispatch.py", line 1096, in op_dispatch_handler
    return dispatch_target(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/ops/array_ops.py", line 1023, in _slice_helper
    with ops.name_scope(
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/framework/ops.py", line 6866, in __enter__
    def __enter__(self):
KeyboardInterrupt